
/** 8-way Or gate: out = in[0] Or in[1] Or ... Or in[7] */

CHIP Or8Way {

    IN in[8];
    OUT out;

    PARTS:
    // Implementation_#1:

/**
    // NOT in[i]
    Nand (a = in[0], b = in[0], out = Notin0);
    Nand (a = in[1], b = in[1], out = Notin1);
    Nand (a = in[2], b = in[2], out = Notin2);
    Nand (a = in[3], b = in[3], out = Notin3);
    Nand (a = in[4], b = in[4], out = Notin4);
    Nand (a = in[5], b = in[5], out = Notin5);
    Nand (a = in[6], b = in[6], out = Notin6);
    Nand (a = in[7], b = in[7], out = Notin7);

    // (NOT (in[i])) NAND (NOT (in[i + 1])) recursively
    Nand (a = Notin0, b = Notin1, out = tempOr0);
    Nand (a = tempOr0, b = Notin2, out = tempOr1);
    Nand (a = tempOr1, b = Notin3, out = tempOr2);
    Nand (a = tempOr2, b = Notin4, out = tempOr3);
    Nand (a = tempOr3, b = Notin5, out = tempOr4);
    Nand (a = tempOr4, b = Notin6, out = tempOr5);
    Nand (a = tempOr5, b = Notin7, out = out);

    Â¿WHY in = 00010000 DOES NOT WORK?
*/

    // Implementation_#2:

    Or (a = in[0], b = in[1], out = t0);
    Or (a = t0, b = in[2], out = t1);
    Or (a = t1, b = in[3], out = t2);
    Or (a = t2, b = in[4], out = t3);
    Or (a = t3, b = in[5], out = t4);
    Or (a = t4, b = in[6], out = t5);
    Or (a = t5, b = in[7], out = out);    

}