
/** 8-way 16-bit multiplexor: out = a if sel == 000, b if sel == 001, ... h if sel == 111 */

CHIP Mux8Way16 {

    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];

    OUT out[16];

    PARTS:
    // Implementation_#1:

    // STORE A/B/C/D depending of sel[0,1]
    Mux4Way16 (a = a, b = b, c = c, d = d, sel = sel[0..1], out = abcd);

    // STORE E/F/G/H depending of sel[0,1]
    Mux4Way16 (a = e, b = f, c = g, d = h, sel = sel[0..1], out = efgh);

    // OUTPUT A/B/C/D or E/F/G/H depending of sel[2]
    Mux16 (a = abcd, b = efgh, sel = sel[2], out = out);

/**
    // Mux4Way16 Implementation_#1:

        IN a[16], b[16], c[16], d[16], sel[2];
        OUT out[16];

        // STORE A[i] or B[i] values depending of sel[0] 
        Mux16 (a = a, b = b, sel = sel[0], out = ab);


        // STORE C[i] or D[i] values depending of sel[0]
        Mux16 (a = c, b = d, sel = sel[0], out = cd);

        //OUTPUT A/B or C/D depending of sel[1]
        Mux16 (a = ab, b = cd, sel = sel[1], out = out);
*/
/**
    // Mux16 Implementation_#1

        IN a[16], b[16], sel;
        OUT out[16];

        // NOT (sel)
        Nand (a = sel, b = sel, out = Notsel);

        // x = (NOT(sel)) NAND A[i]
        Nand (a = Notsel, b = a[0], out = NotselNanda0);
        Nand (a = Notsel, b = a[i], out = NotselNandai);

        // y = sel NAND B[i]
        Nand (a = sel, b = b[0], out = selNandb0);
        Nand (a = sel, b = b[i], out = selNandbi);

        // x NAND y
        Nand (a = NotselNanda0, b = selNandb0, out = out[0]);
        Nand (a = NotselNandai, b = selNandb1, out = out[i]);
*/
/**
    // Mux Implementation_#1:

        // NOT (sel)
        Nand (a = sel, b = sel, out = Notsel);

        // x = (NOT(sel)) NAND A
        Nand (a = Notsel, b = a, out = NotselNanda);

        // y = sel NAND B
        Nand (a = sel, b = b, out = selNandb);

        // x NAND y
        Nand (a = NotselNanda, b = selNandb, out = out);
*/

}